@page "/meal/add"
@using Blazored.FluentValidation
@using ManagerDiet.Client.Components.Meals.EditComponents
@using ManagerDiet.Shared.Diets.Commands
@inject HttpClient http;
@inject NavigationManager Navigator

<EditForm Model="@NewMeal" OnSubmit="OnSubmitMethod">
    <FluentValidationValidator />


    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>General Form</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active">General Form</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>
    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-md-*">
                <MealCreate NewMeal="@NewMeal" />
                <!--/.col (right) -->
            </div>
            <!-- /.row -->
        </div>
        <div class="card-footer">
            <input type="submit" value="Dodaj nowy posiłek" class="btn btn-primary">
        </div>
    </section>
</EditForm>


@code {
    public CreateMealVm NewMeal { get; set; } = new();

    private async void OnSubmitMethod(EditContext editContext)
    {
        if (editContext.Validate())
        {

            var response = await http.PostAsJsonAsync("api/meals", NewMeal);
            var json = await response.Content.ReadAsStringAsync();

            Navigator.NavigateTo("/meal/" + int.Parse(json));

            Console.WriteLine("Meal has been validated");
        }
        else
        {
            Console.WriteLine("Meal hasn't been validated");
        }
    }
}
